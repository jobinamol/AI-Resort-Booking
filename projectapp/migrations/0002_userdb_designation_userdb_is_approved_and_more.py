# Generated by Django 5.1.7 on 2025-03-16 05:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projectapp', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='userdb',
            name='designation',
            field=models.CharField(choices=[('owner', 'Resort Owner'), ('manager', 'Resort Manager')], default='manager', max_length=50),
        ),
        migrations.AddField(
            model_name='userdb',
            name='is_approved',
            field=models.BooleanField(default=False, verbose_name='Admin Approved'),
        ),
        migrations.AddField(
            model_name='userdb',
            name='is_verified',
            field=models.BooleanField(default=False, verbose_name='Email Verified'),
        ),
        migrations.CreateModel(
            name='Resort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resort_name', models.CharField(max_length=255, verbose_name='Resort Name')),
                ('resort_address', models.TextField(verbose_name='Resort Address')),
                ('resort_contact', models.CharField(max_length=15, verbose_name='Resort Contact')),
                ('resort_type', models.CharField(choices=[('staycation', 'Staycation'), ('daycation', 'Daycation'), ('luxury', 'Luxury'), ('budget', 'Budget')], max_length=50, verbose_name='Resort Type')),
                ('room_count', models.PositiveIntegerField(verbose_name='Number of Rooms')),
                ('has_pool', models.BooleanField(default=False, verbose_name='Swimming Pool')),
                ('has_spa', models.BooleanField(default=False, verbose_name='Spa & Wellness')),
                ('has_restaurant', models.BooleanField(default=False, verbose_name='Restaurant')),
                ('has_gym', models.BooleanField(default=False, verbose_name='Fitness Center')),
                ('has_wifi', models.BooleanField(default=False, verbose_name='High-Speed Wi-Fi')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Valet Parking')),
                ('has_romantic_package', models.BooleanField(default=False, verbose_name='Romantic Getaway')),
                ('has_family_package', models.BooleanField(default=False, verbose_name='Family Vacation')),
                ('has_business_package', models.BooleanField(default=False, verbose_name='Business Stay')),
                ('has_wellness_package', models.BooleanField(default=False, verbose_name='Wellness Retreat')),
                ('has_longstay_package', models.BooleanField(default=False, verbose_name='Extended Stay')),
                ('has_workation_package', models.BooleanField(default=False, verbose_name='Work From Resort')),
                ('has_pool_access', models.BooleanField(default=False, verbose_name='Pool Day Pass')),
                ('has_spa_day', models.BooleanField(default=False, verbose_name='Spa Day Package')),
                ('has_dining', models.BooleanField(default=False, verbose_name='Dining Experience')),
                ('has_workspace', models.BooleanField(default=False, verbose_name='Day Workspace')),
                ('has_wedding_venue', models.BooleanField(default=False, verbose_name='Wedding Venue')),
                ('has_conference_hall', models.BooleanField(default=False, verbose_name='Conference Hall')),
                ('has_banquet_hall', models.BooleanField(default=False, verbose_name='Banquet Hall')),
                ('has_outdoor_venue', models.BooleanField(default=False, verbose_name='Outdoor Events')),
                ('has_water_sports', models.BooleanField(default=False, verbose_name='Water Sports')),
                ('has_trekking', models.BooleanField(default=False, verbose_name='Trekking Tours')),
                ('has_cycling', models.BooleanField(default=False, verbose_name='Cycling')),
                ('has_yoga', models.BooleanField(default=False, verbose_name='Yoga Classes')),
                ('has_cooking_class', models.BooleanField(default=False, verbose_name='Cooking Classes')),
                ('has_kids_club', models.BooleanField(default=False, verbose_name='Kids Club')),
                ('has_airport_transfer', models.BooleanField(default=False, verbose_name='Airport Transfer')),
                ('has_car_rental', models.BooleanField(default=False, verbose_name='Car Rental')),
                ('has_shuttle', models.BooleanField(default=False, verbose_name='Shuttle Service')),
                ('has_taxi', models.BooleanField(default=False, verbose_name='Taxi Booking')),
                ('has_student_package', models.BooleanField(default=False, verbose_name='Student Groups')),
                ('has_senior_package', models.BooleanField(default=False, verbose_name='Senior Citizens')),
                ('has_corporate_package', models.BooleanField(default=False, verbose_name='Corporate Groups')),
                ('has_honeymoon_package', models.BooleanField(default=False, verbose_name='Honeymoon')),
                ('has_laundry', models.BooleanField(default=False, verbose_name='Laundry Service')),
                ('has_childcare', models.BooleanField(default=False, verbose_name='Childcare')),
                ('has_room_service', models.BooleanField(default=False, verbose_name='24/7 Room Service')),
                ('has_concierge', models.BooleanField(default=False, verbose_name='Concierge')),
                ('has_medical', models.BooleanField(default=False, verbose_name='Medical Assistance')),
                ('is_pet_friendly', models.BooleanField(default=False, verbose_name='Pet Friendly')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resort', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResortImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='resort_images/', verbose_name='Resort Image')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('resort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projectapp.resort')),
            ],
            options={
                'ordering': ['-is_primary', '-uploaded_at'],
            },
        ),
    ]
